@use '../utils/variables' as var;
@use './icons';

.button {
  @include var.flexBox($direction: row, $justify: center, $align: center, $wrap: null, $gap: null);
  cursor: pointer;
  @include var.transitionStyle((background-color, color, box-shadow));

  &__icon {
    @extend .icon;
    fill: var.getColor('text-button-primary');

    &--end {
      @extend .button__icon;
      margin-left: 24px;
    }

    &--dark {
      @extend .button__icon;
      fill: var.getColor('text-button-secondary');
    }
  }

  &--primary {
    @extend .button;
    width: 200px;
    padding: 10px 0;
    border: none;
    border-radius: 4px;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);
    @include var.fontStyle(
      $size: 16px,
      $height: 1.875,
      $spacing: 0.06em,
      $weight: 700,
      $style: null
    );
    color: var.getColor('text-button-primary');
    background-color: var.getColor('background-button-primary');

    &:hover,
    &:focus {
      background-color: var.getColor('background-button-secondary');
      color: var.getColor('text-button-secondary');

      & .button__icon {
        fill: var.getColor('text-button-secondary');
      }
    }
  }

  &--secondary {
    @extend .button;
    padding: 6px 22px;
    border: none;
    border-radius: 4px;
    @include var.fontStyle(
      $size: 16px,
      $height: 1.625,
      $spacing: 0.03em,
      $weight: 500,
      $style: null
    );
    color: var.getColor('text-button-secondary');
    background-color: var.getColor('background-button-secondary');

    &:hover,
    &:focus {
      background-color: var.getColor('background-button-primary');
      color: var.getColor('text-button-primary');
      box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),
        0px 2px 2px rgba(0, 0, 0, 0.12);
    }
  }

  &--close {
    @extend .button;
    width: 30px;
    height: 30px;
    background: transparent;
    border: 1px solid var.getColor('border-primary');
    border-radius: 50%;

    &:hover .button__icon {
      fill: var.getColor('brand');
      transform: rotate(180deg);
    }
  }
}
